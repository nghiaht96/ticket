swagger: '2.0'
info:
  version: 1.0.0
  title: Ticket
  description: Ticket Adapter
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
- name: ticket
  description: Everything about Ticket
schemes:
- https
- http
paths:
  /v1/tickets/:
    post:
      tags:
      - ticket
      summary: Upsert ticket
      operationId: upsertTicket
      produces:
      - application/json
      parameters:
      - in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/ticket'
      responses:
        '200':
          description: OK
          schema:
            type: string
            description: idTicket
        '400':
          description: 'Bad request, validation error'
        '500':
          description: Internal Server Error

  /v1/tickets/countTicketByIsbn:
    get:
      tags:
      - ticket
      summary: Get total borrowing number of book
      description: Get total borrowing number of book by ISBN
      operationId: countTicketByIsbn
      parameters:
      - in: query
        name: isbn
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: integer
        500:
          description: Internal Server Error
  '/v1/tickets/{idTicket}':
    get:
      tags:
      - ticket
      summary: Get ticket by idTicket
      operationId: getTicketByIdTicket
      produces:
      - application/json
      parameters:
      - in: path
        name: idTicket
        required: true
        type: string
      responses:
        '200':
          description: succesfull operation
          schema:
            $ref: '#/definitions/ticket'
        '400':
          description: Invalid idTicket supplied
        '500':
          description: Internal Server Error
    delete:
      tags:
      - ticket
      summary: Delete ticket by idTicket
      operationId: deleteTicket
      produces:
      - application/json
      parameters:
      - name: idTicket
        in: path
        description: The idTicket that needs to be deleted
        required: true
        type: string
      responses:
        '200':
          description: Deleted succsessfully
          schema:
            type: string
        '400':
          description: Invalid idTicket supplied
        '404':
          description: Ticket not found
        '500':
          description: Internal Server Error
  '/v1/tickets/{idTicket}/setLimitBook':
    put:
      tags:
      - ticket
      summary: Set limit borrowing book
      description: Set limit borrowing book
      operationId: setLimitBorrowingBook
      parameters:
      - in: path
        name: idTicket
        required: true
        type: string
      - in: query
        name: limitBookNumber
        type: integer
        required: true
      responses:
        200:
          description: OK
        500:
          description: Internal Server Error
  '/v1/tickets/statisticsForNumberBorrowingTicket':
    get:
      tags:
      - ticket
      summary: Statistics for number of borrowing tickets weekly/monthly/yearly
      description: Statistics for number of borrowing tickets weekly/monthly/yearly
      produces:
      - application/json
      parameters:
      - in: query
        name: type
        description: WEEKLY OR MONTHLY OR YEARLY
        type: string
        enum: [WEEKLY, MONTHLY, YEARLY]
        required: true
      operationId: statisticsNumberBorrowingTicket
      responses:
        200:
          description: OK
          schema:
            type: string
        500:
          description: Internal Server Error

  '/v1/tickets/statisticsIncome':
    get:
      tags:
      - ticket
      summary: Statistics Income weekly/monthly/yearly
      description: Statistics Income weekly/monthly/yearly
      produces:
      - application/json
      parameters:
      - in: query
        name: type
        description: WEEKLY OR MONTHLY OR YEARLY
        type: string
        enum: [WEEKLY, MONTHLY, YEARLY]
        required: true
      operationId: statisticsIncome
      responses:
        200:
          description: OK
          schema:
            type: string
        500:
          description: Internal Server Error
definitions:
  ticketDetail:
    type: object
    properties:
      id:
        type: string
        example: 0
      isbn:
        type: string
        example: 0
      idTicket:
        type: string
        example: 0
      fee:
        type: number
        format: double
        example: 3.5
      borrowDate:
        type: string
        format: date
        example: '2019-1-1'
      returnDate:
        type: string
        format: date
        example: '2019-1-3'
  ticket:
    type: object
    properties:
      id:
        type: string
        example: 0
      username:
        type: string
        example: 0
      ticketDetails:
        type: array
        items:
          $ref: '#/definitions/ticketDetail'
      totalFee:
        type: number
        format: double
        example: 10.0
      limitBook:
        type: integer
        example: 3